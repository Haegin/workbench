#!/usr/bin/env ruby
# encoding: UTF-8

# Travis Status Check (requires travis gem and pro account)

# gem install travis
# travis login --pro
# travis token --pro
# (paste token below)

require "travis/pro"
require 'lifx' rescue LoadError

unless ENV['TMUX_TRAVIS_TOKEN'] && ENV['TMUX_TRAVIS_REPO']
  puts "Failed: TMUX_TRAVIS_TOKEN and TMUX_TRAVIS_REPO env vars required"
  exit 1
end

Travis::Pro.access_token = ENV['TMUX_TRAVIS_TOKEN']
repo = Travis::Pro::Repository.find(ENV['TMUX_TRAVIS_REPO'])

build = repo.builds.detect { |b|
  # get last finished master build that did not error (not a PR)
  b.finished? & !b.errored? && !b.pull_request? && b.branch_info =~ /master/
}

if build
  color = {}
  label = ""

  if build.failed?
    minutes_ago = ((Time.now.utc - build.finished_at) / 60.0).floor
    color = { :bg => "160", :fg => "000" }
    label = "✘ #{minutes_ago}m"
  elsif build.passed?
    label = '✔︎'
    color = { :bg => "041", :fg => "016" }
  end

  puts "#[bg=colour000,fg=colour#{color[:bg]}]⮂#[bg=colour#{color[:bg]},fg=colour#{color[:fg]}] #{label} #[fg=colour000,bg=colour#{color[:bg]}]⮂#[default]"

  if bulb_name = ENV['TMUX_TRAVIS_LIFX_BULB']
    client = LIFX::Client.lan
    # blocks until light discovered with this name
    client.discover! do |c|
      c.lights.with_label(bulb_name)
    end

    if light = client.lights.with_label(bulb_name)

      bulb_color = LIFX::Color.white
      if build.failed?
        bulb_color = LIFX::Color.red(brightness: 0.25)
      elsif build.passed?
        bulb_color = LIFX::Color.green(brightness: 0.25)
      end

      light.turn_on
      light.set_color(bulb_color, duration: 5)
      client.flush
    end
  end
end
