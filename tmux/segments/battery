#!/usr/bin/env bash
set -e

function battery_status {
  ioreg -c AppleSmartBattery -w0 | \
    grep -o '"[^"]*" = [^ ]*' | \
    sed -e 's/= //g' -e 's/"//g' | \
    sort | \
    while read key value; do
      # extract key value pairs
      case $key in
        "MaxCapacity")
          local max=$value;;
        "CurrentCapacity")
          local current=$value;;
        "IsCharging")
          local is_charging=$value;;
        "FullyCharged")
          local fully_charged=$value;;
      esac

      if [[ -n $max && -n $current ]]; then
        local icon=""
        local percent=100
        local bg_color=042
        local fg_color=000
        local status_line="#[fg=colour022,bg=default]#[default]"

        if [[ "$fully_charged" == "No" ]]; then
          percent=$((100 * $current / $max))
        fi

        # color range
        local bg_colors=(088 166 172 178 109)
        local fg_colors=(015 000 000 000 000)
        local range=$(($percent / (100 / ${#bg_colors[*]})))

        # not fully charged? show colors
        if (( $percent < 100 )); then
          bg_color=${bg_colors[$range]}
          fg_color=${fg_colors[$range]}

          # is charging? show icon
          if [[ $fully_charged == "Yes" ]]; then
            icon="♥"
          elif [[ $is_charging == "Yes" ]]; then
            icon=""
          else
            icon="♡"
          fi
          status_line="#[bg=colour233,fg=colour$bg_color]#[bg=colour$bg_color,fg=colour$fg_color] $icon $percent% #[fg=colour022,bg=colour$bg_color]#[default]"
        fi

        echo $status_line
        break
      fi
    done
}

case $(uname -s) in
  "Darwin")
    battery_status;;
  esac
