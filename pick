#!/bin/bash

# https://github.com/thoughtbot/pick
# http://kylebebak.github.io/post/git-utility-functions-pick
# https://github.com/kylebebak/dotfiles/blob/master/dotfiles/.helpers/pick.sh

# helper to print and execute command string
function _pick__echo_and_execute() {
  echo $1
  eval $1
}

# find a process ID and copy it to the clipboard
alias psp="ps -ef | pick | awk '{print \$2}' | xargs echo -n | pbcopy"

# search history, filtering first with grep, then with pick; e.g
# USAGE: hist [keyword for grep]
function hist(){
  $(history | tail -r | grep -iE "$*" | pick | xargs | cut -d ' ' -f 2- | xargs | tr -d '\n' | pbcopy)
}

# git related

# helper to pick a branch, local or remote. trims leading whitespace, and "*" if necessary
function _pick__pick_branch(){
  echo $(git branch -a | pick | sed 's/^\*//'| xargs echo)
}

# helper to pick a commit hash
function _pick__pick_commit(){
  # `tr -d` to remove non-ascii chars, these chars cause strange bug with multi-line pick output
  echo $(git log --pretty=format:'%h %ad \| %s%d [%an]' --date=short "$@" | tr -d '\200-\377' | pick | cut -d ' ' -f1)
}

# pick a branch and pass it to `command`, or copy the branch name
# USAGE: gbp [command]
function gbp() {
  branch=$(_pick__pick_branch)
  if [ $# -eq 0 ]; then echo -n $branch | pbcopy; return; fi
  _pick__echo_and_execute "$* $branch"
}

alias gbr='gbp' # legacy alias, old shortcut i've grown acustomed too :)

# pick a commit and pass it to `command`, or copy the commit hash
# USAGE: gcp [command]
function gcp(){
  commit=$(_pick__pick_commit)
  if [ $# -eq 0 ]; then echo -n $commit | pbcopy; return; fi
  _pick__echo_and_execute "$* $commit"
}
