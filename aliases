#!/bin/bash

# general
alias g='git'
alias v='vim'
alias vi='vim'
alias fhp='cd ~/Documents/firehose/job\ prep/;ll;mate ~/Documents/firehose/resources/mentor_session_test.rb;open https://www.thefirehoseproject.com/courses'
alias gpgenc='gpg --encrypt --sign --armor -r' # args are email and file
alias irc='ssh hoth -t "screen -x"'
alias con='tail -40 -f /var/log/system.log'
alias gpg='gpg2'
alias scratch="vi ~/Documents/system/vim_wiki/Scratch.md"
alias todos="vi ~/Documents/system/vim_wiki/Todos.md"
alias secrets="vi ~/Documents/system/secrets.enc.md"

# VNC (needs ssh config set)
alias vnc-hoth="ssh -f hoth.vnc.tunnel -N; open vnc://localhost:5999"
alias vnc-dagobah="ssh -f dagobah.vnc.tunnel -N; open vnc://localhost:5998"

# tmux, list or attach to a session
alias tm="tmux ls"
alias tma="tmux a -t "

# https://github.com/trapd00r/ls--/issues/14
alias ll=' LC_ALL=en_US.UTF-8 LANG=en ls++ -a'

# quick project cds
alias cdpmf='cd /u/apps/faqtory'
alias cdpms='cd /u/apps/pmfaqtory-store'
alias cdbe='cd /u/apps/beyondendurance'
alias cdhbb='cd /u/apps/bugle'
alias cdwb='cd /u/code/workbench'

# roo
alias cdf='cd /u/apps/freeagent'

# encrypt a string with eyaml for puppet config and copy to clipboard
function pupencrypt {
  working_dir=$PWD
  cd /u/code/puppet-config;
  bundle exec eyaml encrypt -o string -s “$1” | tr -d '\n' | pbcopy
  cd $working_dir
}

# commit changes as fixup to previous commit, rebase with branch (master) with
# auto-squashing (no editor)
function fixup {
  CHANGES=`git status -s`
  if [ -z "$CHANGES" ]
  then
    echo "aborting .. nothing to add or commit"
  else
    REBASE_WITH="master"
    if [ -n "$1" ]
    then
      REBASE_WITH=$1
    fi

    git add .
    git commit --fixup HEAD
    GIT_SEQUENCE_EDITOR=: git rebase -i --autosquash $REBASE_WITH
  fi
}

# git commit extracting story ID from branch name
function gc {
  if [ -n "$1" ]
  then
    STORY_ID=$story_id_from_git_branch
    # does story id already exist in arg?
    if [[ $1 =~ "[$STORY_ID]" ]]; then
      GIT_COMMIT_MSG=$1
    else
      # prefix message with [story-id]
      GIT_COMMIT_MSG="[$STORY_ID] $1"
    fi;

    git commit -am "$GIT_COMMIT_MSG"
  else
    echo "usage: gc 'your commit message'"
  fi
}

# rails / ruby
alias gofast='ruby -i -pe "gsub /cache_classes \= (.+)$/, \"cache_classes = true\"" config/environments/development.rb'
alias goslow='ruby -i -pe "gsub /cache_classes \= (.+)$/, \"cache_classes = false\"" config/environments/development.rb'
alias tdl='tail -f ./log/development.log'
alias ttl='tail -f ./log/test.log'
alias rst='touch ./tmp/restart.txt'
alias rbenvit='rbenv shell `cat .ruby-version`'

# bundler / rake / spec / cucumber
alias be='bundle exec'
alias ss='bundle exec rails server'
alias sc='bundle exec rails console'
alias sg='bundle exec rails generate'
alias bes='bundle exec rspec'
alias bec='bundle exec cucumber'
alias rdbm='bundle exec rake db:migrate'
alias rdbp='bundle exec rake db:test:prepare'

# git
alias gb="git branch"
alias gg="git pull"
alias gp="git push"
alias grm="git rebase master -i"

# mysql
alias mysql='mysql -uroot'
alias mypmf='mysql faqtory_development'
