#!/usr/bin/env osascript

# Apple Script to execute when Torrent file completed transfer
# find the file (in Downloads or largest video file in torrent dir)
# add to Permute and start the transfer queue

set videoExtList to {"3g2", "3gp", "3gp2", "3gpp", "3mm", "60d", "aep", "ajp", "amv", "asf", "asx", "avb", "avi", "avs", "bik", "bix", "box", "byu", "cvc", "dce", "dif", "dir", "divx", "dv", "dvr-ms", "dxr", "eye", "fcp", "flc", "fli", "flv", "flx", "gl", "grasp", "gvi", "gvip", "ifo", "imovieproject", "ivf", "ivs", "izz", "izzy", "lsf", "lsx", "m1v", "m2v", "m4e", "m4u", "m4v", "mjp", "mkv", "moov", "mov", "movie", "mp4", "mpe", "mpeg", "mpg", "mpv2", "msh", "mswmm", "mvb", "mvc", "nvc", "ogm", "omf", "prproj", "prx", "qt", "qtch", "rm", "rmvb", "rp", "rts", "sbk", "scm", "smil", "smv", "spl", "srt", "ssm", "svi", "swf", "swi", "tivo", "ts", "vdo", "vf", "vfw", "vid", "viewlet", "viv", "vivo", "vob", "vro", "wm", "wmd", "wmv", "wmx", "wvx", "yuv"}
set foundFile to true
set fileTarget to (path to downloads folder as text) & (system attribute "TR_TORRENT_NAME")

tell application "Finder"
  if file fileTarget exists then
    set fileToConvert to fileTarget
  end if

  if folder fileTarget exists then
    # get largest video in the folder
    set torrentFiles to every file of folder fileTarget whose name extension is in videoExtList
    set torrentFiles to the reverse of (sort torrentFiles by size)
    set fileToConvert to item 1 of torrentFiles
  end if
end tell

try
  get fileToConvert
on error
  set foundFile to false
end try

if foundFile then
  # say "converting " & fileToConvert
  tell application "Permute"
    open fileToConvert as alias
    start queue
  end tell
end if

# clean away old files from Downloads (older than 6 hours)
do shell script "find /Users/$USER/Downloads -maxdepth 1 -cmin +360 -print0 | xargs -0 rm -r"
