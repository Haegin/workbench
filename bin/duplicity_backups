#!/bin/sh

# Duplicity - GPG signed, encrypted and compressed differential backups
#
# Sensitive ENV vars are extracted from the OSX keychain (man security)
#  - http://duplicity.nongnu.org
#  - http://ss64.com/osx/security.html
#
# Requirements
#   brew install duplicity gpg2
#   and ensure you have a OSX keychain entries for your GPG passphrase and S3
#   credentials e.g. account: $USER service: GPG

ulimit -n 1024

# export ENV var from the OSX keychain
#  - args {env var name} {service name} {account name}
function export_osx_keychain_password() {
  export $1=`security 2>&1 > /dev/null find-generic-password -s $2 -a $3 -g | sed 's/.*"\(.*\)"/\1/'`
}

# export ENV vars from keychain for duplicity commands
export_osx_keychain_password "PASSPHRASE" "GPG" $USER
export_osx_keychain_password "AWS_SECRET_ACCESS_KEY" "AWS_SECRET_ACCESS_KEY" $USER
export_osx_keychain_password "AWS_ACCESS_KEY_ID" "AWS_ACCESS_KEY_ID" $USER

# backup target destinations (a network file share and S3 EU bucket)
S3_BACKUP_URL="s3://s3-eu-west-1.amazonaws.com/hiddenloop-backups/duplicity/$HOSTNAME"

# various duplicity options
exclude_options="--exclude-filelist /Users/$USER/.duplicity_exclude"
gpg_options="--gpg-binary /usr/local/bin/gpg2"
s3_options="--s3-use-new-style --s3-european-buckets --s3-use-ia --s3-use-server-side-encryption --allow-source-mismatch"

# folders to backup
backup_folders=( "/Users/$USER/Sites" "/Users/$USER/Documents" "/Users/$USER/vagrant" )

echo "Starting Backups"
for folder in "${backup_folders[@]}"
do
  # skip folder if it does not exist
  if [ -d "$folder" ]; then
    echo

    echo "####### $folder Backup Started (S3)  ########"
    /usr/local/bin/duplicity $gpg_options $exclude_options $s3_options $folder $S3_BACKUP_URL$folder
    echo "####### $folder Removing Old Backups (S3) ########"
    /usr/local/bin/duplicity $gpg_options remove-older-than 1M --force $S3_BACKUP_URL$folder
    /usr/local/bin/duplicity $gpg_options cleanup --extra-clean --force $S3_BACKUP_URL$folder

    echo
  fi
done

# clear out any sensitive ENV vars
export PASSPHRASE=
export AWS_ACCESS_KEY_ID=
export AWS_SECRET_ACCESS_KEY=
