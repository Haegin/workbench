#!/bin/bash
# Matthew Hutchinson - mh@housetrip.com
# this prints out some branch status from remote/origin relative to
# origin/master and shows behind information (if it is behind)
# (modified from branch-status command http://github.com/jehiah

# example:
# $ branches-behind
# or add some regex for branches to ignore e.g.
# $ branches-behind 'staging|val|interhome|google|consumer|fix|inbox|ck_|production'
# or show the top 5 most behind
# $ branches-behind | sort -gr | head -n5

args=("$@")

git for-each-ref --format="%(refname:short) %(upstream:short)" refs/remotes/origin | \
  while read branch
  do
    # remote branches to ignore (regex)
    if [ $args[1] ] ; then
      [[ "$branch" =~ ${args[1]} ]] && continue
    fi

    git rev-list --left-right ${branch}...origin/master -- 2>/dev/null >/tmp/git_upstream_status_delta || continue
    LEFT_AHEAD=$(grep -c '^<' /tmp/git_upstream_status_delta)
    RIGHT_AHEAD=$(grep -c '^>' /tmp/git_upstream_status_delta)
    if [ $RIGHT_AHEAD -gt 0 ] ; then
      echo "$RIGHT_AHEAD $branch is behind origin/master"
    fi
  done
